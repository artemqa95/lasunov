{"version":3,"sources":["components/Button/Button.js","components/Calculator/Action/Action.js","helpers/validation.js","components/Calculator/Calculator.js","App.js","index.js"],"names":["Button","props","className","Action","value","type","currentValue","newValue","onApplyAction","rest","actionByType","divide","Number","multiply","minus","plus","equal","isEqualType","onClick","disabled","isNaN","parseFloat","actions","Calculator","useState","setCurrentValue","inputValue","setInputValue","counted","onChange","event","target","Object","keys","map","actionType","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAQeA,EANA,SAACC,GACZ,OACI,oCAAQC,UAAW,OAAWD,K,OCAtC,IAqBeE,EArBA,SAAC,GAA4D,ICJnDC,EDIRC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,cAAkBC,EAAU,kEACjEC,EAAe,CACjBC,OAAQ,kBAAML,EAAaM,OAAOL,IAClCM,SAAU,kBAAMP,EAAaM,OAAOL,IACpCO,MAAO,kBAAMR,EAAaM,OAAOL,IACjCQ,KAAM,kBAAMT,EAAaM,OAAOL,IAChCS,MAAO,kBAAMV,IAGXW,EAAuB,UAATZ,EAOpB,OAAO,cAAC,EAAD,2BAAYI,GAAZ,IAAkBS,QALF,WAEnBV,EADgBE,EAAaL,GACNY,IAGuBE,UAAWF,ICpBxCb,EDoBiEG,KCnB9Ea,MAAMhB,KAAWgB,MAAMC,WAAWjB,MDmBnC,SACFkB,EAAQjB,OEuBFkB,EAtCI,WAAO,IAAD,EACmBC,mBAAS,GAD5B,mBACdlB,EADc,KACAmB,EADA,OAEeD,mBAASlB,GAFxB,mBAEdoB,EAFc,KAEFC,EAFE,KASfnB,EAAgB,SAACoB,GAAkC,IAAzBX,EAAwB,wDACpDQ,EAAgBG,GACZX,GAAaU,EAAcC,IAGnC,OAAO,qBAAK1B,UAAW,YAAhB,SACH,sBAAKA,UAAW,UAAhB,UACI,qBAAKA,UAAW,iBAAhB,SACI,kCACI,wCAASE,IAAT,OACA,uBAAOC,KAAK,OACLwB,SAhBD,SAACC,GACnB,IAAM1B,EAAQ0B,EAAMC,OAAO3B,MAC3BuB,EAAcvB,IAeKA,MAAOsB,EACPxB,UAAW,8BAI1B,qBAAKA,UAAW,iBAAhB,SACK8B,OAAOC,KAAKX,GAASY,KAAI,SAAAC,GACtB,OAAO,cAAC,EAAD,CAAQ9B,KAAM8B,EAEN7B,aAAcA,EACdC,SAAUmB,EACVlB,cAAeA,GAHV2B,cCxBzBC,EARH,WACV,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04242bfc.chunk.js","sourcesContent":["import './styles.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={'btn'} {...props}/>\r\n    )\r\n}\r\n\r\nexport default Button","import Button from \"../../Button/Button\";\r\nimport actions from '../actions.json'\r\nimport {isNumber} from \"../../../helpers/validation\";\r\n\r\nconst Action = ({type, currentValue, newValue, onApplyAction, ...rest}) => {\r\n    const actionByType = {\r\n        divide: () => currentValue/Number(newValue),\r\n        multiply: () => currentValue*Number(newValue),\r\n        minus: () => currentValue-Number(newValue),\r\n        plus: () => currentValue+Number(newValue),\r\n        equal: () => currentValue\r\n    }\r\n\r\n    const isEqualType = type === 'equal'\r\n\r\n    const onClickHandler = () => {\r\n        const counted = actionByType[type]\r\n        onApplyAction(counted, isEqualType)\r\n    }\r\n\r\n    return <Button {...rest} onClick={onClickHandler} disabled={!isEqualType && !isNumber(newValue)}>\r\n        {actions[type]}\r\n    </Button>\r\n}\r\n\r\nexport default Action","export function isNumber(value) {\r\n    return !isNaN(value) && !isNaN(parseFloat(value))\r\n}","import React, {useState} from 'react'\r\nimport './styles.css'\r\nimport {value} from '../../constants/text.json'\r\nimport Action from \"./Action/Action\";\r\nimport actions from './actions.json';\r\n\r\nconst Calculator = () => {\r\n    const [currentValue, setCurrentValue] = useState(0)\r\n    const [inputValue, setInputValue] = useState(currentValue)\r\n\r\n    const onChangeInput = (event) => {\r\n        const value = event.target.value\r\n        setInputValue(value)\r\n    }\r\n\r\n    const onApplyAction = (counted, isEqualType = false) => {\r\n        setCurrentValue(counted)\r\n        if (isEqualType) setInputValue(counted)\r\n    }\r\n\r\n    return <div className={'container'}>\r\n        <div className={'content'}>\r\n            <div className={'content-header'}>\r\n                <label>\r\n                    <div>{`${value}:`}</div>\r\n                    <input type=\"text\"\r\n                           onChange={onChangeInput}\r\n                           value={inputValue}\r\n                           className={'content-header-field'}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div className={'content-footer'}>\r\n                {Object.keys(actions).map(actionType => {\r\n                    return <Action type={actionType}\r\n                                   key={actionType}\r\n                                   currentValue={currentValue}\r\n                                   newValue={inputValue}\r\n                                   onApplyAction={onApplyAction}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Calculator","import React from 'react'\nimport Calculator from \"./components/Calculator/Calculator\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}